<UserControl x:Class="Filmator.View.UserControls.Header"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:r="clr-namespace:Filmator.Resources.View"
             DataContext="{Binding Main, Source={StaticResource Locator}}"
             mc:Ignorable="d" 
             d:DesignHeight="30" d:DesignWidth="600">
    <UserControl.Resources>
        <Style x:Key="Layout" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="#2c3e50"/>
        </Style>
        <Style x:Key="Title" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="22" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#34495e"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#3498db"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#3498db"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
    </UserControl.Resources>

    <Grid Style="{StaticResource Layout}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50*"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>

        <TextBlock Style="{StaticResource Title}" Text="{x:Static r:MainWindow.Title}" Grid.Column="0"/>

        <Button 
            Command="{Binding SetMinimizeWindowStateCommand}"
            CommandParameter="{
                Binding RelativeSource={
                    RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}
                }
            }"  Content="-" Grid.Column="1" />
        <Button 
            Command="{Binding ToggleMaximizedWindowStateCommand}"
            CommandParameter="{
                Binding RelativeSource={
                    RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}
                }
            }" 
            Content="o" Grid.Column="2" />
        <Button 
            Command="{Binding CloseWindowCommand}" 
            CommandParameter="{
                Binding RelativeSource={
                    RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}
                }
            }" 
            Content="x" 
            Grid.Column="3"/>
    </Grid>
</UserControl>
